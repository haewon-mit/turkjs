---
layout: post
title: Watch this Story
date: 2015-11-24
categories: story
---

<div id="shadow" style="background-image:url({{ '/assets/imgs/shade1x1.png' | prepend: site.baseurl | prepend: site.url }}); position:absolute; left:0; top:0; width:100%; height=:100%;"> </div>

# Instructions: 

Please watch the following video for as long as you wish. Every few seconds, the system will ask if you are still watching. Please click the button when it asks you to. When you feel you have watched enough, please click the "Done" button below the video.
{: #instruction_block}

<div id="golink" markdown="1"> 
When you are ready <a href="javascript:void(0);" onclick="$('#vidDiv').toggle();">click here.</a>
</div>

<div id="vidDiv" markdown="1">

# Video

<video id="video1" preload="auto" onpause="onpause_e();" onended="onend_e();" src="{{ '/assets/vids/' | prepend: site.baseurl | prepend: site.url }}" type="video/webm" ></video>
<script src="{{ "assets/js/jquery-1.9.1.js" | prepend: site.baseurl | prepend: site.url }}"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
<script type="text/javascript">
var hasPlayed = false;
var myVideo = document.getElementById("video1");
var playtoggled = false;
var lengthRun = 0;
var donePressed = false;
var timeshit = 0;
var data_in = {targetParams: {"experiment":"none","movie":"Hedgehog"}};

function getParameterByName(name) {
    var serch = location.search.replace(/amp;/g, "");
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(serch);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

var servletURL="{{ '/' | prepend: site.servleturl }}" + getParameterByName("ex"); // + "?movname=" + getParameterByName("movname");

function takenExp() {
  var exp = getParameterByName("ex")+getParameterByName("movname");
  var name = "ndggprg" + exp;
  var val = $.cookie(name);
  return typeof val !== 'undefined';
}

function deleteExp() {
  var exp = getParameterByName("ex")+getParameterByName("movname");
  var name = "ndggprg" + exp;
  $.removeCookie(name);
}

function markExp(iduser) {
  var exp = getParameterByName("ex")+getParameterByName("movname");
  var name = "ndggprg" + exp;
  $.cookie(name, iduser, {expires:365});
}

function setInstructionBlock(somehtml) {
   if(!takenExp()) {
     $("#instruction_block").html(somehtml);
   }
}

$.post(servletURL, {movname: getParameterByName("movname")}, function( data, textStatus, jqxhr ) {
   data_in = $.parseJSON(data);
   console.log("text: " + textStatus + " and data: " + data);
   myVideo.src = myVideo.src + data_in.movieURL;
   setInstructionBlock(data_in.instructions);
   $(".post-title")[0].innerText = data_in.title;
});


var post_url = "{{ "/length_report" | prepend: site.servleturl }}";

function onend_e() {
  console.log("end");
  hasPlayed = true;
  $('#nextStats').toggle();
}

function onplay_e() {
  console.log("play");
  if(!hasPlayed) {
    //onpause_e();
    if(!playtoggled) {
      $('#playBut').toggle();
      playtoggled=true;
    }
    myVideo.play();
    setRandomTimeout();
  }
}
function onpause_e() {
  console.log("pause");
  console.log("cur: " + myVideo.currentTime + " and dur: " + myVideo.duration);
  if(!donePressed && !hasPlayed && myVideo.paused && myVideo.currentTime != myVideo.duration) {
    myVideo.play();
  }
}

function ondone_e() {
   if(outrTimeout != 0) {
     clearTimeout(outrTimeout);
   }
   donePressed= true;
   myVideo.pause()
   lengthRun = myVideo.currentTime;
   myVideo.currentTime = 0;
   console.log("User watched " + lengthRun + " time of duration: " + myVideo.duration);
   $("#doneButton").attr('disabled', true);
   $("#mashButton").attr('disabled', true);
   $("#nextStats").toggle();
}

var mshrButton = 0;
var outrTimeout = 0
function masherTimeout() {
  console.log("Checking if user is watching");
  $("#mashButton").attr('disabled', false);
  $("#mashButton").attr("style", "background-color:lightgreen")
  mshrButton = setTimeout(function(){ 
     console.log("TIMEOUT");
     $("#mashButton").attr("style", "background-color:red")
     ondone_e();
  }, 5000);
}

function setRandomTimeout() {
  var secTimeout = Math.floor((Math.random() * 15) + 30);
  outrTimeout = setTimeout(masherTimeout, secTimeout * 1000);
  $("#mashButton").attr('disabled', true);
}

function mashed() {
    if(mshrButton != 0) {
      clearTimeout(mshrButton);
      mshrButton = 0;
      $("#mashButton").attr("style", "background-color:normal")
      timeshit = timeshit + 1;
      setRandomTimeout();
    }
}


</script>
<a id="playBut" href="javascript:void(0);" onclick="onplay_e();">Play</a>

|:-------------:|:-------------:|
| <button id="doneButton" onclick="ondone_e();">I'm finished</button> | <button id="mashButton" onclick="mashed();">Are you still watching?</button>          |
{: width="40%" border="0px" align="left"}


</div> 

<br />
<br />
<br />

<div id="nextStats" markdown="1">

# What made you stop watching the video?
<textarea id="why" cols="50" rows="5"></textarea>

<center>
<button id="submitBut" onclick="submitClick();">Finish and Submit</button>
</center>
</div>

<div id="consent" style="z-index: 57; background: white; position:absolute; left:100px; top:30px; width:75%; padding: 0;">
</div>

<script src="{{ "/assets/js/jspsych.js" | prepend: site.baseurl | prepend: site.url }}" type="text/javascript">
</script>

<script type="text/javascript">
$("#nextStats").toggle();
$("#shadow").toggle();
$("#vidDiv").toggle();

function generateUUID() {
    var d = new Date().getTime();
    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r = (d + Math.random()*16)%16 | 0;
        d = Math.floor(d/16);
        return (c=='x' ? r : (r&0x3|0x8)).toString(16);
    });
    return uuid;
};

var turkInfo = jsPsych.turk.turkInfo();

function submitClick() {
  console.log("submit!");
  $("#submitBut").toggle();
  var info = jsPsych.turk.turkInfo();
  var idUser;
  if(info.outsideTurk) {
    idUser = generateUUID();
  } else {
    idUser = info.workerId;
  }
  var dat_out = { times: lengthRun,
                  id: idUser,
                  counts: timeshit,
                  why: $("#why").val()};
  jsPsych.turk.submitToTurk(dat_out);

  dat_out = $.extend({}, dat_out, data_in.targetParams);
  $.post(post_url, dat_out);
  markExp(idUser);
  setTimeout(function() {
     document.location='https://nimbus.media.mit.edu/story//terminate/2015/09/27/epsilon.html';
  }, 2000);
}

function agreed() {
  console.log("They agreed.");
  $("#consent").toggle();
  $("#shadow").toggle();
}

function declined() {
  console.log("They declined.");
}

if(turkInfo.previewMode && !turkInfo.outsideTurk) {
  $("#golink").toggle();
}

if(!turkInfo.previewMode && !turkInfo.outsideTurk) {
  $("#shadow").toggle();
  $("#consent").toggle();
}

setTimeout(function() {
  if(turkInfo.outsideTurk) {
    if(takenExp()) {
      $("#golink").toggle();
      $("#instruction_block").html("<h2> You have already participated in this experiment</h2>");
    } else {
      $("#shadow").toggle();
      $("#consent").toggle();
    }
  }
}, 800);

$("#consent").load("{{ '/consent/2015/09/27/alpha.html' | prepend: site.baseurl | prepend: site.url }} article", function() {
   $("#agreeBut").attr("href", "#");
   $("#agreeBut").attr("onclick", "agreed();");
   $("#declineBut").attr("onclick", "declined();");
   $("#declineBut").attr("href", "#");
   $("#shadow").css("height", $(document).height());
});

$("#consent").toggle();

</script>

